-- Test schema for H2 database

-- Drop tables if they exist
DROP TABLE IF EXISTS user_orders;
DROP TABLE IF EXISTS numero_awb;  -- Cambiado el orden del drop
DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS departments;
DROP TABLE IF EXISTS guias_despacho;
DROP TABLE IF EXISTS clientes;

-- Create departments table
CREATE TABLE departments (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    code VARCHAR(20) UNIQUE NOT NULL,
    active BOOLEAN DEFAULT TRUE,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create users table
CREATE TABLE users (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    age INTEGER,
    status VARCHAR(20) DEFAULT 'ACTIVE',
    active BOOLEAN DEFAULT TRUE,
    department_id BIGINT,
    salary DECIMAL(10,2),
    employee_number VARCHAR(50),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (department_id) REFERENCES departments(id)
);

-- Create orders table
CREATE TABLE orders (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    order_number VARCHAR(50) NOT NULL,
    total DECIMAL(10,2) NOT NULL,
    status VARCHAR(20) DEFAULT 'PENDING',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Create user_orders join table (many-to-many example)
CREATE TABLE user_orders (
    user_id BIGINT NOT NULL,
    order_id BIGINT NOT NULL,
    role VARCHAR(50) DEFAULT 'CUSTOMER',
    PRIMARY KEY (user_id, order_id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (order_id) REFERENCES orders(id)
);

-- Create clientes table (for your specific use case)
CREATE TABLE clientes (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(200) NOT NULL,
    rut VARCHAR(20) UNIQUE,
    email VARCHAR(255),
    telefono VARCHAR(50),
    activo BOOLEAN DEFAULT TRUE,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create guias_despacho table (for your specific use case)
CREATE TABLE guias_despacho (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    numero_guia VARCHAR(50) NOT NULL,
    estado VARCHAR(30) DEFAULT 'CREADA',
    cliente_id BIGINT NOT NULL,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    fecha_despacho TIMESTAMP NULL,
    active BOOLEAN DEFAULT TRUE,
    observaciones TEXT,
    FOREIGN KEY (cliente_id) REFERENCES clientes(id)
);

-- ⚠️ CRÍTICO: Esta tabla debe crearse DESPUÉS de guias_despacho
-- porque tiene una FK a guias_despacho
CREATE TABLE numero_awb (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    guia_id BIGINT NOT NULL,
    numero VARCHAR(50) NOT NULL,
    tipo VARCHAR(20) DEFAULT 'AWB',
    activo BOOLEAN DEFAULT TRUE,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_numero_awb_guia FOREIGN KEY (guia_id) REFERENCES guias_despacho(id)
);

-- Create indexes for better performance
CREATE INDEX idx_users_name ON users(name);
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_status ON users(status);
CREATE INDEX idx_users_department ON users(department_id);
CREATE INDEX idx_orders_user ON orders(user_id);
CREATE INDEX idx_orders_status ON orders(status);
CREATE INDEX idx_guias_numero ON guias_despacho(numero_guia);
CREATE INDEX idx_guias_estado ON guias_despacho(estado);
CREATE INDEX idx_guias_cliente ON guias_despacho(cliente_id);
CREATE INDEX idx_numero_awb_numero ON numero_awb(numero);
CREATE INDEX idx_numero_awb_guia_id ON numero_awb(guia_id);

-- ==================== src/test/resources/sql/schema/hsqldb-schema.sql ====================
-- Test schema for HSQLDB database

-- Drop tables if they exist
--DROP TABLE user_orders IF EXISTS;
--DROP TABLE numeroawb IF EXISTS;
--DROP TABLE orders IF EXISTS;
--DROP TABLE users IF EXISTS;
--DROP TABLE departments IF EXISTS;
--DROP TABLE guias_despacho IF EXISTS;
--DROP TABLE clientes IF EXISTS;

-- Create departments table
--CREATE TABLE departments (
--    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    name VARCHAR(100) NOT NULL,
--    code VARCHAR(20) NOT NULL UNIQUE,
--    active BOOLEAN DEFAULT TRUE,
--    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
--);

-- Create users table  
--CREATE TABLE users (
--    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    name VARCHAR(100) NOT NULL,
--    email VARCHAR(255) NOT NULL UNIQUE,
--    age INTEGER,
--    status VARCHAR(20) DEFAULT 'ACTIVE',
--    active BOOLEAN DEFAULT TRUE,
--    department_id BIGINT,
--    salary DECIMAL(10,2),
--    employee_number VARCHAR(50),
--    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--    updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--    FOREIGN KEY (department_id) REFERENCES departments(id)
--);

-- Similar structure for other tables...
-- (abbreviated for space, but would include all tables)